{"ast":null,"code":"(function ($) {\n  'use strict';\n\n  $(function () {\n    /* Code for attribute data-custom-class for adding custom class to tooltip */\n    if (typeof $.fn.tooltip.Constructor === 'undefined') {\n      throw new Error('Bootstrap Tooltip must be included first!');\n    }\n\n    var Tooltip = $.fn.tooltip.Constructor; // add customClass option to Bootstrap Tooltip\n\n    $.extend(Tooltip.Default, {\n      customClass: ''\n    });\n    var _show = Tooltip.prototype.show;\n\n    Tooltip.prototype.show = function () {\n      // invoke parent method\n      _show.apply(this, Array.prototype.slice.apply(arguments));\n\n      if (this.config.customClass) {\n        var tip = this.getTipElement();\n        $(tip).addClass(this.config.customClass);\n      }\n    };\n\n    $('[data-toggle=\"tooltip\"]').tooltip();\n  });\n})(jQuery);","map":{"version":3,"sources":["/home/anmol/Documents/anmol/rest API/react-final/mygroceryapp/src/components/js/tooltips.js"],"names":["$","fn","tooltip","Constructor","Error","Tooltip","extend","Default","customClass","_show","prototype","show","apply","Array","slice","arguments","config","tip","getTipElement","addClass","jQuery"],"mappings":"AAAA,CAAC,UAASA,CAAT,EAAY;AACX;;AAEAA,EAAAA,CAAC,CAAC,YAAW;AACX;AACA,QAAI,OAAOA,CAAC,CAACC,EAAF,CAAKC,OAAL,CAAaC,WAApB,KAAoC,WAAxC,EAAqD;AACnD,YAAM,IAAIC,KAAJ,CAAU,2CAAV,CAAN;AACD;;AAED,QAAIC,OAAO,GAAGL,CAAC,CAACC,EAAF,CAAKC,OAAL,CAAaC,WAA3B,CANW,CAQX;;AACAH,IAAAA,CAAC,CAACM,MAAF,CAASD,OAAO,CAACE,OAAjB,EAA0B;AACxBC,MAAAA,WAAW,EAAE;AADW,KAA1B;AAIA,QAAIC,KAAK,GAAGJ,OAAO,CAACK,SAAR,CAAkBC,IAA9B;;AAEAN,IAAAA,OAAO,CAACK,SAAR,CAAkBC,IAAlB,GAAyB,YAAW;AAElC;AACAF,MAAAA,KAAK,CAACG,KAAN,CAAY,IAAZ,EAAkBC,KAAK,CAACH,SAAN,CAAgBI,KAAhB,CAAsBF,KAAtB,CAA4BG,SAA5B,CAAlB;;AAEA,UAAI,KAAKC,MAAL,CAAYR,WAAhB,EAA6B;AAC3B,YAAIS,GAAG,GAAG,KAAKC,aAAL,EAAV;AACAlB,QAAAA,CAAC,CAACiB,GAAD,CAAD,CAAOE,QAAP,CAAgB,KAAKH,MAAL,CAAYR,WAA5B;AACD;AAEF,KAVD;;AAWAR,IAAAA,CAAC,CAAC,yBAAD,CAAD,CAA6BE,OAA7B;AAED,GA5BA,CAAD;AA6BD,CAhCD,EAgCGkB,MAhCH","sourcesContent":["(function($) {\n  'use strict';\n\n  $(function() {\n    /* Code for attribute data-custom-class for adding custom class to tooltip */\n    if (typeof $.fn.tooltip.Constructor === 'undefined') {\n      throw new Error('Bootstrap Tooltip must be included first!');\n    }\n\n    var Tooltip = $.fn.tooltip.Constructor;\n\n    // add customClass option to Bootstrap Tooltip\n    $.extend(Tooltip.Default, {\n      customClass: ''\n    });\n\n    var _show = Tooltip.prototype.show;\n\n    Tooltip.prototype.show = function() {\n\n      // invoke parent method\n      _show.apply(this, Array.prototype.slice.apply(arguments));\n\n      if (this.config.customClass) {\n        var tip = this.getTipElement();\n        $(tip).addClass(this.config.customClass);\n      }\n\n    };\n    $('[data-toggle=\"tooltip\"]').tooltip();\n\n  });\n})(jQuery);"]},"metadata":{},"sourceType":"module"}